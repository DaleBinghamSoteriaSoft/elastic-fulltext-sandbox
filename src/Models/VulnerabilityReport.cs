using System;
using System.Collections.Generic;

namespace elastic.fulltext.sandbox.Models
{
    [Serializable]
    public class VulnerabilityReport
    {
        public VulnerabilityReport () {
            cciList = new List<string>(); // don't make it null
            isWebDatabaseApplication = false;
            webDatabaseApplicationSite = "";
            webDatabaseApplicationInstance = "";
        }
        
        public string internalIdString {get; set;}
        public string artifactId {get; set;}
        public string systemGroupId {get; set;}
        public string systemTitle { get; set; }
        public string systemKey { get; set; }
        public string vulnid { get; set; }
        public string hostname { get; set; }
        public string checklistType { get; set; }
        public string checklistTypeSanitized { get; set; }
        public string checklistRelease { get; set; }
        public string checklistVersion { get; set; }
        public string checklistTitle { get {
            string finalTitle = "";
            if (!string.IsNullOrEmpty(hostname)) finalTitle += hostname.Trim() + "-"; // put the hostname first
            finalTitle += checklistType.Trim() + "-V" + checklistVersion + "-" + checklistRelease.Trim();
            if (isWebDatabaseApplication) { // must have one of the others filled out to show extra information
                if (!string.IsNullOrWhiteSpace(webDatabaseApplicationSite) && 
                    !string.IsNullOrWhiteSpace(webDatabaseApplicationInstance)) {
                    finalTitle += " (" + webDatabaseApplicationSite + ", " + webDatabaseApplicationInstance + ")";
                } else if (!string.IsNullOrWhiteSpace(webDatabaseApplicationSite)) {
                    finalTitle += " (" + webDatabaseApplicationSite + ")";
                } else if (!string.IsNullOrWhiteSpace(webDatabaseApplicationInstance)) {
                    finalTitle += " (" + webDatabaseApplicationInstance + ")";
                }
            }

            return finalTitle;
        } }
        
        public string ruleTitle { get; set; }
        public string ruleId { get; set;}
        public string ruleVersion { get; set; }
        public string groupTitle { get; set; }
        public string severity { get; set; }
        public int severityCategory { get {
            if (string.IsNullOrEmpty(severity) && string.IsNullOrEmpty(severityOverride))
                return 0;
            else if ((severity.ToLower() == "high" && string.IsNullOrEmpty(severityOverride)) || severityOverride.ToLower() == "high")
                return 3;
            else if ((severity.ToLower() == "medium" && string.IsNullOrEmpty(severityOverride)) || severityOverride.ToLower() == "medium")
                return 2;
            else if ((severity.ToLower() == "low" && string.IsNullOrEmpty(severityOverride)) || severityOverride.ToLower() == "low")
                return 1;
            else
                return 4;
        } }
        public string status { get; set; }
        public List<string> cciList { get; set; }
        public string details { get; set; }
        public string comments { get; set; }
        public string discussion { get; set; }
        public string fixText { get; set; }
        public string checkContent { get; set; }
        public string severityOverride { get; set; }
        public string severityJustification { get; set; }
        public string securityControlNumbers { get; set; }
        public string cciReferences { get; set; }


        public int version { get; set; } // goes to versioning
        public bool deleted { get; set;}
        public bool locked { get; set; }
        

        public DateTime created { get; set; }

        public DateTime? updated { get; set; }


        public Guid createdBy { get; set; }
        public string createdByName { get; set; }
        public Guid? updatedBy { get; set; }
        public string updatedByName { get; set; }

        // v2.10.01
        public bool isWebDatabaseApplication { get; set; }
        public string webDatabaseApplicationSite { get; set; }
        public string webDatabaseApplicationInstance { get; set; }
    }
}